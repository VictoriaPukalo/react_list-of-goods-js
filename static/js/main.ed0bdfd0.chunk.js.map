{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_ALPHABETICAL","SORT_BY_LENGTH","GoodList","goods","map","good","App","useState","sortField","setSortField","isReversed","setIsReserved","visibleGoods","sort","good1","good2","localeCompare","length","reverse","className","type","cn","onClick","ReactDOM","render","document","getElementById"],"mappings":"0OAMaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAoB,eACpBC,EAAiB,SAGjBC,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACf,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBAAI,UAAQ,OAAZ,SACGA,UAMIC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACMC,EAAe,UAAIb,GAAiBc,MAAK,SAACC,EAAOC,GACrD,OAAQP,GACN,KAAKR,EACH,OAAOc,EAAME,cAAcD,GAE7B,KAAKd,EACH,OAAOa,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,MAQb,OAJIP,GACFE,EAAaM,UAIb,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,SAAU,UAAW,CACjC,WAAYb,IAAcR,IAE5BsB,QAAS,kBAAMb,EAAaT,IAL9B,iCAUA,wBACEoB,KAAK,SACLD,UAAWE,IAAG,SAAU,aAAc,CACpC,WAAYb,IAAcP,IAE5BqB,QAAS,kBAAMb,EAAaR,IAL9B,4BAUA,wBACEmB,KAAK,SACLD,UAAWE,IAAG,SAAU,aAAc,CACpC,YAAaX,IAEfY,QAAS,kBAAMX,GAAeD,IALhC,sBAvDgB,KAiEdF,GAAiCE,IACjC,wBACEU,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPb,EAtEU,IAuEVE,GAAc,IALlB,sBAaJ,cAAC,EAAD,CAAUR,MAAOS,QCjGvBW,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ed0bdfd0.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\n\nimport { useState } from 'react';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_ALPHABETICAL = 'alphabetical';\nconst SORT_BY_LENGTH = 'length';\nconst SORT_BY_DEFAULT = '';\n\nconst GoodList = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <li data-cy=\"Good\">\n        {good}\n      </li>\n    ))}\n  </ul>\n);\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [isReversed, setIsReserved] = useState(false);\n  const visibleGoods = [...goodsFromServer].sort((good1, good2) => {\n    switch (sortField) {\n      case SORT_ALPHABETICAL:\n        return good1.localeCompare(good2);\n\n      case SORT_BY_LENGTH:\n        return good1.length - good2.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button', 'is-info', {\n            'is-light': sortField !== SORT_ALPHABETICAL,\n          })}\n          onClick={() => setSortField(SORT_ALPHABETICAL)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-success', {\n            'is-light': sortField !== SORT_BY_LENGTH,\n          })}\n          onClick={() => setSortField(SORT_BY_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button', 'is-warning', {\n            'is-light': !isReversed,\n          })}\n          onClick={() => setIsReserved(!isReversed)}\n        >\n          Reverse\n        </button>\n\n        {(sortField !== SORT_BY_DEFAULT || isReversed) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setSortField(SORT_BY_DEFAULT);\n              setIsReserved(false);\n            }}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <GoodList goods={visibleGoods} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}